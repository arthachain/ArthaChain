version: "3.9"

services:
  node:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    container_name: arthachain-node
    restart: unless-stopped
    environment:
      - RUST_LOG=${ARTHACHAIN_LOG_LEVEL:-info}
      - ARTHACHAIN_NODE_ID=${ARTHACHAIN_NODE_ID:-arthachain-node-01}
      - ARTHACHAIN_NETWORK_ID=${ARTHACHAIN_NETWORK_ID:-arthachain-testnet-1}
      - ARTHACHAIN_CHAIN_ID=${ARTHACHAIN_CHAIN_ID:-1337}
      - PUBLIC_IP=${PUBLIC_IP}
    env_file:
      - .env
    volumes:
      - ../blockchain_node/testnet_config_global.toml:/app/testnet_config.toml:ro
      - node_data:/app/testnet_data
      - node_logs:/app/logs
    ports:
      - "30303:30303"   # P2P (libp2p)
    expose:
      - "3000"          # REST API
      - "8545"          # JSON-RPC
      - "8546"          # WebSocket
      - "9090"          # Metrics
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"

  caddy:
    image: caddy:2.7
    container_name: arthachain-caddy
    restart: unless-stopped
    env_file: .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - node
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2019/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: arthachain-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - node

  grafana:
    image: grafana/grafana:latest
    container_name: arthachain-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus

volumes:
  node_data: {}
  node_logs: {}
  caddy_data: {}
  caddy_config: {}
  prometheus_data: {}
  grafana_data: {}


