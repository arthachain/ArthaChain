# ArthaChain GLOBAL Testnet Configuration
# ⚠️ WARNING: This configuration exposes services to the internet!
# Make sure to configure proper firewall rules and security measures

[network]
# Testnet network ID
network_id = "arthachain-global-testnet-1"
# Chain ID for EVM compatibility
chain_id = 1337
# Network name
name = "ArthaChain Global Testnet"

[node]
# Node configuration
node_id = "global-testnet-node-01"
# Data directory for blockchain data
data_dir = "./testnet_data"
# Log level (trace, debug, info, warn, error)
log_level = "info"
# Public IP address (will be auto-detected if not set)
public_ip = ""  # Leave empty for auto-detection

[consensus]
# Consensus algorithm parameters
algorithm = "SVBFT"
# Block time in seconds
block_time = 3
# Maximum block size in bytes
max_block_size = 2097152  # 2MB
# Maximum transaction pool size
max_tx_pool_size = 10000
# Validator set size
validator_set_size = 4
# Minimum stake required to become validator (in native tokens)
min_validator_stake = 1000000

[network_p2p]
# P2P network listening address - BIND TO ALL INTERFACES
listen_addr = "0.0.0.0:30303"
# External address for peer discovery
external_addr = ""  # Will be auto-detected if empty
# Maximum number of peer connections
max_peers = 100
# Boot nodes for network discovery - REPLACE WITH YOUR PUBLIC IPs
boot_nodes = [
    "/ip4/YOUR_PUBLIC_IP/tcp/30303/p2p/12D3KooWGlobalNode1",
    "/ip4/BACKUP_NODE_IP/tcp/30303/p2p/12D3KooWGlobalNode2",
]
# Enable NAT traversal
enable_nat = true
# Enable UPnP for automatic port forwarding
enable_upnp = true

[rpc]
# HTTP RPC server configuration - GLOBAL ACCESS
http_enabled = true
http_addr = "0.0.0.0"  # BIND TO ALL INTERFACES
http_port = 8545
http_cors_origins = ["*"]  # Allow all origins (configure properly for production)
# Maximum concurrent connections
http_max_connections = 1000

# WebSocket RPC server configuration - GLOBAL ACCESS
ws_enabled = true
ws_addr = "0.0.0.0"  # BIND TO ALL INTERFACES
ws_port = 8546
ws_max_connections = 500
ws_origins = ["*"]  # Allow all origins (configure properly for production)

[api]
# REST API server configuration - GLOBAL ACCESS
enabled = true
addr = "0.0.0.0"  # BIND TO ALL INTERFACES
port = 3000
# API rate limiting (more restrictive for global access)
rate_limit = 100  # requests per minute per IP
burst_limit = 20  # burst requests
# API authentication (recommended for global access)
require_api_key = false  # Set to true for production
api_keys = []  # Add API keys here if enabled

[ai_engine]
# AI engine configuration
enabled = true
# AI model paths
fraud_detection_model = "./models/fraud_detection.onnx"
identity_model = "./models/identity_verification.onnx"
# AI inference batch size
inference_batch_size = 32
# AI model update frequency (in blocks)
model_update_frequency = 1000

[storage]
# Storage configuration
backend = "hybrid"  # rocksdb, memmap, hybrid
# RocksDB configuration
rocksdb_path = "./testnet_data/rocksdb"
rocksdb_max_files = 1000
# MemMap configuration
memmap_path = "./testnet_data/memmap"
memmap_size = 1073741824  # 1GB

[metrics]
# Metrics and monitoring - GLOBAL ACCESS
enabled = true
prometheus_addr = "0.0.0.0"  # BIND TO ALL INTERFACES
prometheus_port = 9090
# Health check interval in seconds
health_check_interval = 30
# Enable detailed metrics
detailed_metrics = true

[security]
# ENHANCED SECURITY FOR GLOBAL ACCESS
quantum_resistance = true
# Encryption algorithms
signature_algorithm = "Dilithium3"
encryption_algorithm = "Kyber768"
hash_algorithm = "BLAKE3"
# DDoS protection
enable_ddos_protection = true
max_requests_per_ip = 1000  # per minute
# Connection limits
max_connections_per_ip = 10
# Enable TLS/SSL
enable_tls = false  # Set to true and configure certificates for production
tls_cert_path = ""
tls_key_path = ""

[firewall]
# Built-in firewall rules
enabled = true
# Whitelist specific IPs (empty = allow all)
whitelist_ips = []
# Blacklist specific IPs
blacklist_ips = []
# Geographic restrictions (ISO country codes)
allowed_countries = []  # Empty = allow all countries
blocked_countries = []  # e.g., ["XX", "YY"]

[faucet]
# Testnet faucet configuration - MORE RESTRICTIVE FOR GLOBAL
enabled = true
# Amount to distribute per request (in native tokens)
distribution_amount = 100  # Reduced for global access
# Cooldown period between requests (in seconds)
cooldown_period = 86400  # 24 hours for global
# Maximum requests per day per address
max_daily_requests = 1
# CAPTCHA protection
require_captcha = true

[monitoring]
# Global monitoring and alerting
enable_alerts = true
alert_webhook = ""  # Discord/Slack webhook for alerts
# Performance thresholds
cpu_alert_threshold = 80  # percent
memory_alert_threshold = 80  # percent
disk_alert_threshold = 90  # percent

[cloud]
# Cloud deployment settings
provider = ""  # aws, gcp, azure, digitalocean, linode
region = ""  # e.g., us-east-1, europe-west1
instance_type = ""  # e.g., t3.xlarge, n2-standard-4
# Auto-scaling
enable_auto_scaling = false
min_nodes = 1
max_nodes = 10
scale_up_threshold = 80  # CPU percentage
scale_down_threshold = 20  # CPU percentage

[dns]
# Domain configuration for easy access
domain = ""  # e.g., testnet.arthachain.com
subdomain = "rpc"  # e.g., rpc.testnet.arthachain.com
# Cloudflare integration (optional)
cloudflare_enabled = false
cloudflare_api_token = ""
cloudflare_zone_id = ""

[genesis]
# Genesis block configuration
timestamp = 1704067200  # January 1, 2024
# Initial token distribution
initial_supply = 1000000000  # 1 billion tokens
# Genesis validators - ADD YOUR PUBLIC VALIDATOR ADDRESSES
validators = [
    {
        address = "0x742d35Cc6634C0532925a3b8D6Dd6782b4c12345",
        stake = 10000000,
        public_key = "0x1234567890abcdef...",
    },
    {
        address = "0x742d35Cc6634C0532925a3b8D6Dd6782b4c54321",
        stake = 10000000,
        public_key = "0xfedcba0987654321...",
    },
]

# Pre-funded accounts for testing
pre_funded_accounts = [
    {
        address = "0x742d35Cc6634C0532925a3b8D6Dd6782b4c99999",
        balance = 100000000,  # 100M tokens
    },
    {
        address = "0x742d35Cc6634C0532925a3b8D6Dd6782b4c88888",
        balance = 50000000,   # 50M tokens
    },
]

[global_access]
# Special settings for worldwide access
enable_geo_redundancy = true
enable_cdn = false  # Set to true if using CDN
cdn_endpoints = []
# Load balancer configuration
enable_load_balancer = false
load_balancer_algorithm = "round_robin"  # round_robin, least_connections, ip_hash
